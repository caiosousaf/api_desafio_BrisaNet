"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _isNil = _interopRequireDefault(require("lodash/isNil"));

var _Sort = _interopRequireDefault(require("@rsuite/icons/Sort"));

var _SortUp = _interopRequireDefault(require("@rsuite/icons/SortUp"));

var _SortDown = _interopRequireDefault(require("@rsuite/icons/SortDown"));

var _ColumnResizeHandler = _interopRequireDefault(require("./ColumnResizeHandler"));

var _utils = require("./utils");

var _Cell = _interopRequireDefault(require("./Cell"));

var SORTED_ICON = {
  desc: _SortDown["default"],
  asc: _SortUp["default"]
};

var HeaderCell = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
  var className = props.className,
      _props$classPrefix = props.classPrefix,
      classPrefix = _props$classPrefix === void 0 ? 'cell-header' : _props$classPrefix,
      width = props.width,
      dataKey = props.dataKey,
      headerHeight = props.headerHeight,
      children = props.children,
      left = props.left,
      sortable = props.sortable,
      sortColumn = props.sortColumn,
      sortType = props.sortType,
      groupHeader = props.groupHeader,
      resizable = props.resizable,
      fixed = props.fixed,
      minWidth = props.minWidth,
      index = props.index,
      flexGrow = props.flexGrow,
      align = props.align,
      verticalAlign = props.verticalAlign,
      onColumnResizeEnd = props.onColumnResizeEnd,
      onResize = props.onResize,
      onColumnResizeStart = props.onColumnResizeStart,
      onColumnResizeMove = props.onColumnResizeMove,
      onSortColumn = props.onSortColumn,
      renderSortIcon = props.renderSortIcon,
      rest = (0, _objectWithoutPropertiesLoose2["default"])(props, ["className", "classPrefix", "width", "dataKey", "headerHeight", "children", "left", "sortable", "sortColumn", "sortType", "groupHeader", "resizable", "fixed", "minWidth", "index", "flexGrow", "align", "verticalAlign", "onColumnResizeEnd", "onResize", "onColumnResizeStart", "onColumnResizeMove", "onSortColumn", "renderSortIcon"]);

  var _useState = (0, _react.useState)((0, _isNil["default"])(flexGrow) ? width : 0),
      columnWidth = _useState[0],
      setColumnWidth = _useState[1];

  (0, _utils.useUpdateEffect)(function () {
    setColumnWidth((0, _isNil["default"])(flexGrow) ? width : 0);
  }, [flexGrow, width]);

  var _useClassNames = (0, _utils.useClassNames)(classPrefix),
      withClassPrefix = _useClassNames.withClassPrefix,
      merge = _useClassNames.merge,
      prefix = _useClassNames.prefix;

  var classes = merge(className, withClassPrefix({
    sortable: sortable
  }));
  var ariaSort;

  if (sortColumn === dataKey) {
    ariaSort = 'other';

    if (sortType === 'asc') {
      ariaSort = 'ascending';
    } else if (sortType === 'desc') {
      ariaSort = 'descending';
    }
  }

  var handleClick = (0, _react.useCallback)(function () {
    if (sortable) {
      onSortColumn === null || onSortColumn === void 0 ? void 0 : onSortColumn(dataKey);
    }
  }, [dataKey, onSortColumn, sortable]);
  var handleColumnResizeStart = (0, _react.useCallback)(function () {
    onColumnResizeStart === null || onColumnResizeStart === void 0 ? void 0 : onColumnResizeStart(columnWidth, left, !!fixed);
  }, [columnWidth, fixed, left, onColumnResizeStart]);
  var handleColumnResizeEnd = (0, _react.useCallback)(function (nextColumnWidth, cursorDelta) {
    setColumnWidth(nextColumnWidth);
    onColumnResizeEnd === null || onColumnResizeEnd === void 0 ? void 0 : onColumnResizeEnd(nextColumnWidth, cursorDelta, dataKey, index);
    onResize === null || onResize === void 0 ? void 0 : onResize(nextColumnWidth, dataKey);
  }, [dataKey, index, onColumnResizeEnd, onResize]);

  var renderSortColumn = function renderSortColumn() {
    if (sortable && !groupHeader) {
      var _classNames;

      var SortIcon = sortColumn === dataKey && sortType ? SORTED_ICON[sortType] : _Sort["default"];
      var iconClasses = (0, _classnames["default"])(prefix('icon-sort'), (_classNames = {}, _classNames[prefix("icon-sort-" + sortType)] = sortColumn === dataKey, _classNames));
      var sortIcon = renderSortIcon ? renderSortIcon(sortColumn === dataKey ? sortType : undefined) : /*#__PURE__*/_react["default"].createElement(SortIcon, {
        className: iconClasses
      });
      return /*#__PURE__*/_react["default"].createElement("span", {
        className: prefix('sort-wrapper')
      }, sortIcon);
    }

    return null;
  };

  return /*#__PURE__*/_react["default"].createElement("div", {
    ref: ref,
    className: classes
  }, /*#__PURE__*/_react["default"].createElement(_Cell["default"], (0, _extends2["default"])({
    "aria-sort": ariaSort
  }, rest, {
    width: width,
    dataKey: dataKey,
    left: left,
    headerHeight: headerHeight,
    isHeaderCell: true,
    align: !groupHeader ? align : undefined,
    verticalAlign: !groupHeader ? verticalAlign : undefined,
    onClick: !groupHeader ? handleClick : undefined
  }), children, renderSortColumn()), resizable ? /*#__PURE__*/_react["default"].createElement(_ColumnResizeHandler["default"], {
    defaultColumnWidth: columnWidth,
    key: columnWidth,
    columnLeft: left,
    columnFixed: fixed,
    height: headerHeight ? headerHeight - 1 : undefined,
    minWidth: minWidth,
    onColumnResizeMove: onColumnResizeMove,
    onColumnResizeStart: handleColumnResizeStart,
    onColumnResizeEnd: handleColumnResizeEnd
  }) : null);
});

HeaderCell.displayName = 'HeaderCell';
HeaderCell.propTypes = {
  index: _propTypes["default"].number,
  sortColumn: _propTypes["default"].string,
  sortType: _propTypes["default"].oneOf(['desc', 'asc']),
  sortable: _propTypes["default"].bool,
  resizable: _propTypes["default"].bool,
  minWidth: _propTypes["default"].number,
  onColumnResizeStart: _propTypes["default"].func,
  onColumnResizeEnd: _propTypes["default"].func,
  onResize: _propTypes["default"].func,
  onColumnResizeMove: _propTypes["default"].func,
  onSortColumn: _propTypes["default"].func,
  flexGrow: _propTypes["default"].number,
  fixed: _propTypes["default"].any,
  children: _propTypes["default"].node,
  renderSortIcon: _propTypes["default"].func
};
var _default = HeaderCell;
exports["default"] = _default;