import { MixedType } from './MixedType';
import { ErrorMessageType } from './types';
import { StringTypeLocale } from './locales';
export declare class StringType<DataType = any, E = ErrorMessageType> extends MixedType<string, DataType, E, StringTypeLocale> {
    constructor(errorMessage?: E | string);
    containsLetter(errorMessage?: E | string): this;
    containsUppercaseLetter(errorMessage?: E | string): this;
    containsLowercaseLetter(errorMessage?: E | string): this;
    containsLetterOnly(errorMessage?: E | string): this;
    containsNumber(errorMessage?: E | string): this;
    isOneOf(values: string[], errorMessage?: E | string): this;
    isEmail(errorMessage?: E | string): this;
    isURL(errorMessage?: E | string): this;
    isHex(errorMessage?: E | string): this;
    pattern(regexp: RegExp, errorMessage?: E | string): this;
    rangeLength(minLength: number, maxLength: number, errorMessage?: E | string): this;
    minLength(minLength: number, errorMessage?: E | string): this;
    maxLength(maxLength: number, errorMessage?: E | string): this;
}
export default function getStringType<DataType = any, E = string>(errorMessage?: E): StringType<DataType, E>;
