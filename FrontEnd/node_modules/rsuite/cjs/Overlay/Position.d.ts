import React from 'react';
import { CursorPosition, TypeAttributes } from '../@types/common';
export interface PositionChildProps {
    className: string;
    left?: number;
    top?: number;
}
export interface PositionProps {
    children: (props: PositionChildProps, ref: any) => React.ReactElement;
    className?: string;
    container?: HTMLElement | (() => HTMLElement | null) | null;
    containerPadding?: number;
    placement?: TypeAttributes.Placement;
    preventOverflow?: boolean;
    triggerTarget?: React.RefObject<any>;
    followCursor?: boolean;
    cursorPosition?: CursorPosition | null;
}
export interface PositionInstance {
    updatePosition?: () => void;
    child?: Element;
}
declare const Position: React.ForwardRefExoticComponent<PositionProps & React.RefAttributes<unknown>>;
export default Position;
