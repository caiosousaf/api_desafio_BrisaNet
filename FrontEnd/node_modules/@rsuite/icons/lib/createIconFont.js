"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = _interopRequireDefault(require("./Icon"));

var _utils = require("./utils");

var cache = new Set();

function isValidScriptUrl(scriptUrl) {
  return typeof scriptUrl === 'string' && scriptUrl.length && !cache.has(scriptUrl);
}

function insertScripts(scriptUrls, index, loadedCallback) {
  if (index === void 0) {
    index = 0;
  }

  var nextIndex = index + 1;
  var currentScriptUrl = scriptUrls[index];

  var loadNextScript = function loadNextScript() {
    insertScripts(scriptUrls, nextIndex, loadedCallback);
  };

  if (isValidScriptUrl(currentScriptUrl)) {
    var script = document.createElement('script');
    script.setAttribute('src', currentScriptUrl);
    script.setAttribute('data-prop', 'icon-font');

    if (scriptUrls.length > nextIndex) {
      script.onload = loadNextScript;
      script.onerror = loadNextScript;
    }

    cache.add(currentScriptUrl);
    document.body.appendChild(script);
  } else if (scriptUrls.length > nextIndex) {
    loadNextScript();
  }

  if (nextIndex >= scriptUrls.length && typeof loadedCallback === 'function') {
    loadedCallback();
  }
}

function createIconFont(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      scriptUrl = _ref.scriptUrl,
      _ref$commonProps = _ref.commonProps,
      commonProps = _ref$commonProps === void 0 ? {} : _ref$commonProps,
      onLoaded = _ref.onLoaded;

  if (scriptUrl && (0, _utils.inBrowserEnv)()) {
    var scriptUrls = Array.isArray(scriptUrl) ? scriptUrl : [scriptUrl];
    insertScripts(scriptUrls.reverse(), 0, onLoaded);
  }

  var IconFont = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
    var icon = props.icon,
        children = props.children,
        className = props.className,
        restProps = (0, _objectWithoutPropertiesLoose2["default"])(props, ["icon", "children", "className"]);
    var clesses = (0, _classnames["default"])(className, commonProps.className, (0, _utils.defaultClassPrefix)('icon-font'));
    /**
     * Children will overwrite <use />
     */

    var content = (0, _react.useMemo)(function () {
      if (children) {
        return children;
      }

      if (icon) {
        return /*#__PURE__*/_react["default"].createElement("use", {
          xlinkHref: "#" + icon
        });
      }
    }, [icon, children]);
    return /*#__PURE__*/_react["default"].createElement(_Icon["default"], (0, _extends2["default"])({}, commonProps, restProps, {
      className: clesses,
      ref: ref
    }), content);
  });

  IconFont.displayName = 'IconFont';
  return IconFont;
}

var _default = createIconFont;
exports["default"] = _default;
module.exports = exports.default;