"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function Linux(props, svgRef) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 29 32",
    fill: "currentColor",
    ref: svgRef
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M11.839 7.339c-.357.036-.232.357-.429.357-.179.018-.143-.393.429-.357zm1.554.25c-.179.054-.196-.286-.518-.196.518-.232.696.125.518.196zm-6.268 7.625c-.161-.054-.125.268-.286.518-.125.232-.446.411-.196.446.089.018.339-.196.446-.446.089-.304.179-.464.036-.518zm15.268 6.411c0-.321-.696-.625-.982-.75.482-1.607.268-2.25-.054-3.768-.25-1.143-1.304-2.696-2.125-3.179.214.179.607.696 1.018 1.482.714 1.339 1.429 3.321.964 4.964-.179.643-.607.732-.893.75-1.25.143-.518-1.5-1.036-3.732-.589-2.5-1.196-2.679-1.339-2.875-.732-3.25-1.536-2.929-1.768-4.143-.196-1.089.946-1.982-.607-2.286-.482-.089-1.161-.571-1.429-.607s-.411-1.804.589-1.857c.982-.071 1.161 1.107.982 1.571-.286.464.018.643.5.482.393-.125.143-1.161.232-1.304-.25-1.5-.875-1.714-1.518-1.839-2.464.196-1.357 2.911-1.607 2.661-.357-.375-1.393-.036-1.393-.268.018-1.393-.446-2.196-1.089-2.214-.714-.018-1 .982-1.036 1.554-.054.536.304 1.661.571 1.571.179-.054.482-.411.161-.393-.161 0-.411-.393-.446-.857-.018-.464.161-.929.768-.911.696.018.696 1.411.625 1.464a3.296 3.296 0 00-.554.518c-.232.375-.679.482-.857.643-.304.321-.375.679-.143.804.821.464.554 1 1.696 1.036.75.036 1.304-.107 1.821-.268.393-.125 1.661-.393 1.929-.857.125-.196.268-.196.357-.143.179.089.214.429-.232.536-.625.179-1.25.518-1.821.732-.554.232-.732.321-1.25.411-1.179.214-2.054-.429-1.268.339.268.25.518.411 1.196.393 1.5-.054 3.161-1.857 3.321-1.054.036.179-.464.393-.857.589-1.393.679-2.375 2.036-3.268 1.571-.804-.429-1.607-2.411-1.589-1.518.018 1.375-1.804 2.589-.964 4.161-.554.143-1.786 2.768-1.964 4.125-.107.786.071 1.75-.125 2.286-.268.786-1.482-.75-1.089-2.625.071-.321 0-.393-.089-.232-.482.875-.214 2.107.179 2.964.161.375.571.536.875.857.625.714 3.089 2.536 3.518 2.982.554.518.393 1.732-.75 1.857.589 1.107 1.161 1.214 1.143 3.018.679-.357.411-1.143.125-1.643-.196-.357-.446-.518-.393-.607.036-.054.393-.357.589-.125.607.679 1.75.804 2.964.643 1.232-.143 2.554-.571 3.161-1.554.286-.464.482-.625.607-.536.143.071.196.393.179.929-.018.571-.25 1.161-.411 1.643-.161.554-.214.929.321.946.143-1 .429-1.982.5-2.982.089-1.143-.732-3.25.161-4.304.232-.286.518-.321.911-.321.054-1.429 2.25-1.321 2.982-.732zM11.179 6.857c.071-.446-.143-.768-.25-.804-.214-.054-.179.268-.071.232.071 0 .161.107.125.268-.036.214-.018.357.143.357.018 0 .054 0 .054-.054zm7.482 3.518c-.071-.339-.321-.214-.607-.393-.339-.214-.411-.571-.536-.446-.375.411.464 1.268.821 1.339.214.036.375-.25.321-.5zm-3.179-3.804c.018-.429-.357-.643-.446-.625-.232.018-.161.125-.054.161.143.036.286.286.321.554 0 .036.179-.036.179-.089zm.964-4.16c.018-.089-.214-.196-.375-.321-.143-.143-.286-.268-.429-.268-.357.036-.179.411-.232.589-.071.196-.339.357-.161.5.161.125.268-.196.607-.321.089-.036.5.018.589-.179zm10.09 23.946c2.196 1.357-.821 2.482-2.125 3.143-1.018.518-2.375 1.661-2.875 2.143-.375.357-1.929.536-2.804.089-1.018-.518-.482-1.339-2.054-1.393-.786-.018-1.554-.018-2.321-.018-.679.018-1.357.054-2.054.071-2.357.054-2.589 1.571-4.107 1.518-1.036-.036-2.339-.857-4.589-1.321-1.571-.321-3.089-.411-3.411-1.107S.589 28 .642 27.321c.054-.911-.679-2.143-.143-2.607.464-.411 1.446-.107 2.089-.464.679-.393.964-.696.964-1.536.25.857-.018 1.554-.571 1.893-.339.214-.964.321-1.482.268-.411-.036-.661.018-.768.179-.161.196-.107.554.089 1.018s.429.768.393 1.339c-.018.571-.661 1.25-.554 1.732.036.179.214.339.661.464.714.196 2.018.393 3.286.696 1.411.357 2.875 1 3.786.875 2.714-.375 1.161-3.286.732-3.982-2.304-3.607-3.821-5.964-5.036-5.036-.304.25-.321-.607-.304-.946.054-1.179.643-1.607 1-2.518.679-1.732 1.196-3.714 2.232-4.732.768-1 1.982-2.625 2.214-3.482-.196-1.857-.25-3.821-.286-5.536-.036-1.839.25-3.446 2.321-4.571.5-.268 1.161-.375 1.857-.375 1.232-.018 2.607.339 3.482.982 1.393 1.036 2.268 3.232 2.161 4.804-.071 1.232.143 2.5.536 3.821.464 1.554 1.196 2.643 2.375 3.893 1.411 1.5 2.518 4.446 2.839 6.321.286 1.75-.107 2.839-.482 2.893-.571.089-.929 1.893-2.714 1.821-1.143-.054-1.25-.732-1.571-1.321-.518-.911-1.036-.625-1.232.339-.107.482-.036 1.196.125 1.732.321 1.125.214 2.179.018 3.482-.375 2.464 1.732 2.929 3.143 1.75 1.393-1.161 1.696-1.339 3.446-1.946 2.661-.911 1.768-1.714.339-2.196-1.286-.429-1.339-2.589-.875-3 .107 2.321 1.321 2.661 1.821 2.982z"
  }));
}

var ForwardRef = /*#__PURE__*/React.forwardRef(Linux);
var _default = ForwardRef;
exports["default"] = _default;