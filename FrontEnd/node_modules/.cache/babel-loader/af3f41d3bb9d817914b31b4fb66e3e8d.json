{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport formatErrorMessage from './formatErrorMessage';\n/**\n * Create a data validator\n * @param data\n */\n\nexport function createValidator(data, name) {\n  return function (value, rules) {\n    for (var i = 0; i < rules.length; i += 1) {\n      var _rules$i = rules[i],\n          onValid = _rules$i.onValid,\n          errorMessage = _rules$i.errorMessage,\n          params = _rules$i.params;\n      var checkResult = onValid(value, data, name);\n\n      if (checkResult === false) {\n        return {\n          hasError: true,\n          errorMessage: formatErrorMessage(errorMessage, _extends({}, params, {\n            name: Array.isArray(name) ? name.join('.') : name\n          }))\n        };\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\n        return checkResult;\n      }\n    }\n\n    return null;\n  };\n}\nexport default createValidator;","map":{"version":3,"names":["_extends","formatErrorMessage","createValidator","data","name","value","rules","i","length","_rules$i","onValid","errorMessage","params","checkResult","hasError","Array","isArray","join","array"],"sources":["/home/brisa/Documentos/api_desafio_BrisaNet/FrontEnd/node_modules/schema-typed/es/utils/createValidator.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport formatErrorMessage from './formatErrorMessage';\n/**\n * Create a data validator\n * @param data\n */\n\nexport function createValidator(data, name) {\n  return function (value, rules) {\n    for (var i = 0; i < rules.length; i += 1) {\n      var _rules$i = rules[i],\n          onValid = _rules$i.onValid,\n          errorMessage = _rules$i.errorMessage,\n          params = _rules$i.params;\n      var checkResult = onValid(value, data, name);\n\n      if (checkResult === false) {\n        return {\n          hasError: true,\n          errorMessage: formatErrorMessage(errorMessage, _extends({}, params, {\n            name: Array.isArray(name) ? name.join('.') : name\n          }))\n        };\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\n        return checkResult;\n      }\n    }\n\n    return null;\n  };\n}\nexport default createValidator;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;EAC1C,OAAO,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;MACxC,IAAIE,QAAQ,GAAGH,KAAK,CAACC,CAAD,CAApB;MAAA,IACIG,OAAO,GAAGD,QAAQ,CAACC,OADvB;MAAA,IAEIC,YAAY,GAAGF,QAAQ,CAACE,YAF5B;MAAA,IAGIC,MAAM,GAAGH,QAAQ,CAACG,MAHtB;MAIA,IAAIC,WAAW,GAAGH,OAAO,CAACL,KAAD,EAAQF,IAAR,EAAcC,IAAd,CAAzB;;MAEA,IAAIS,WAAW,KAAK,KAApB,EAA2B;QACzB,OAAO;UACLC,QAAQ,EAAE,IADL;UAELH,YAAY,EAAEV,kBAAkB,CAACU,YAAD,EAAeX,QAAQ,CAAC,EAAD,EAAKY,MAAL,EAAa;YAClER,IAAI,EAAEW,KAAK,CAACC,OAAN,CAAcZ,IAAd,IAAsBA,IAAI,CAACa,IAAL,CAAU,GAAV,CAAtB,GAAuCb;UADqB,CAAb,CAAvB;QAF3B,CAAP;MAMD,CAPD,MAOO,IAAI,OAAOS,WAAP,KAAuB,QAAvB,KAAoCA,WAAW,CAACC,QAAZ,IAAwBD,WAAW,CAACK,KAAxE,CAAJ,EAAoF;QACzF,OAAOL,WAAP;MACD;IACF;;IAED,OAAO,IAAP;EACD,CArBD;AAsBD;AACD,eAAeX,eAAf"},"metadata":{},"sourceType":"module"}