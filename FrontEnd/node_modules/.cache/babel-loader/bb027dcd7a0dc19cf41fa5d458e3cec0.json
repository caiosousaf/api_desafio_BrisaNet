{"ast":null,"code":"export default {\n  mixed: {\n    isRequired: '${name} is a required field',\n    isRequiredOrEmpty: '${name} is a required field'\n  },\n  array: {\n    type: '${name} must be an array',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} items',\n    minLength: '${name} field must have at least ${minLength} items',\n    maxLength: '${name} field must have less than or equal to ${maxLength} items',\n    unrepeatable: '${name} must have non-repeatable items'\n  },\n  \"boolean\": {\n    type: '${name} must be a boolean'\n  },\n  date: {\n    type: '${name} must be a date',\n    min: '${name} field must be later than ${min}',\n    max: '${name} field must be at earlier than ${max}',\n    range: '${name} field must be between ${min} and ${max}'\n  },\n  number: {\n    type: '${name} must be a number',\n    isInteger: '${name} must be an integer',\n    pattern: '${name} is invalid',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    range: '${name} field must be between ${min} and ${max}',\n    min: '${name} must be greater than or equal to ${min}',\n    max: '${name} must be less than or equal to ${max}'\n  },\n  string: {\n    type: '${name} must be a string',\n    containsLetter: '${name} field must contain letters',\n    containsUppercaseLetter: '${name} must be a upper case string',\n    containsLowercaseLetter: '${name} must be a lowercase string',\n    containsLetterOnly: '${name} must all be letters',\n    containsNumber: '${name} field must contain numbers',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    isEmail: '${name} must be a valid email',\n    isURL: '${name} must be a valid URL',\n    isHex: '${name} must be a valid hexadecimal',\n    pattern: '${name} is invalid',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} characters',\n    minLength: '${name} must be at least ${minLength} characters',\n    maxLength: '${name} must be at most ${maxLength} characters'\n  },\n  object: {\n    type: '${name} must be an object'\n  }\n};","map":{"version":3,"names":["mixed","isRequired","isRequiredOrEmpty","array","type","rangeLength","minLength","maxLength","unrepeatable","date","min","max","range","number","isInteger","pattern","isOneOf","string","containsLetter","containsUppercaseLetter","containsLowercaseLetter","containsLetterOnly","containsNumber","isEmail","isURL","isHex","object"],"sources":["/home/brisa/Documentos/api_desafio_BrisaNet/FrontEnd/node_modules/schema-typed/es/locales/default.js"],"sourcesContent":["export default {\n  mixed: {\n    isRequired: '${name} is a required field',\n    isRequiredOrEmpty: '${name} is a required field'\n  },\n  array: {\n    type: '${name} must be an array',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} items',\n    minLength: '${name} field must have at least ${minLength} items',\n    maxLength: '${name} field must have less than or equal to ${maxLength} items',\n    unrepeatable: '${name} must have non-repeatable items'\n  },\n  \"boolean\": {\n    type: '${name} must be a boolean'\n  },\n  date: {\n    type: '${name} must be a date',\n    min: '${name} field must be later than ${min}',\n    max: '${name} field must be at earlier than ${max}',\n    range: '${name} field must be between ${min} and ${max}'\n  },\n  number: {\n    type: '${name} must be a number',\n    isInteger: '${name} must be an integer',\n    pattern: '${name} is invalid',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    range: '${name} field must be between ${min} and ${max}',\n    min: '${name} must be greater than or equal to ${min}',\n    max: '${name} must be less than or equal to ${max}'\n  },\n  string: {\n    type: '${name} must be a string',\n    containsLetter: '${name} field must contain letters',\n    containsUppercaseLetter: '${name} must be a upper case string',\n    containsLowercaseLetter: '${name} must be a lowercase string',\n    containsLetterOnly: '${name} must all be letters',\n    containsNumber: '${name} field must contain numbers',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    isEmail: '${name} must be a valid email',\n    isURL: '${name} must be a valid URL',\n    isHex: '${name} must be a valid hexadecimal',\n    pattern: '${name} is invalid',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} characters',\n    minLength: '${name} must be at least ${minLength} characters',\n    maxLength: '${name} must be at most ${maxLength} characters'\n  },\n  object: {\n    type: '${name} must be an object'\n  }\n};"],"mappings":"AAAA,eAAe;EACbA,KAAK,EAAE;IACLC,UAAU,EAAE,6BADP;IAELC,iBAAiB,EAAE;EAFd,CADM;EAKbC,KAAK,EAAE;IACLC,IAAI,EAAE,0BADD;IAELC,WAAW,EAAE,yDAFR;IAGLC,SAAS,EAAE,qDAHN;IAILC,SAAS,EAAE,kEAJN;IAKLC,YAAY,EAAE;EALT,CALM;EAYb,WAAW;IACTJ,IAAI,EAAE;EADG,CAZE;EAebK,IAAI,EAAE;IACJL,IAAI,EAAE,wBADF;IAEJM,GAAG,EAAE,yCAFD;IAGJC,GAAG,EAAE,8CAHD;IAIJC,KAAK,EAAE;EAJH,CAfO;EAqBbC,MAAM,EAAE;IACNT,IAAI,EAAE,0BADA;IAENU,SAAS,EAAE,4BAFL;IAGNC,OAAO,EAAE,oBAHH;IAINC,OAAO,EAAE,wDAJH;IAKNJ,KAAK,EAAE,iDALD;IAMNF,GAAG,EAAE,iDANC;IAONC,GAAG,EAAE;EAPC,CArBK;EA8BbM,MAAM,EAAE;IACNb,IAAI,EAAE,0BADA;IAENc,cAAc,EAAE,oCAFV;IAGNC,uBAAuB,EAAE,qCAHnB;IAINC,uBAAuB,EAAE,oCAJnB;IAKNC,kBAAkB,EAAE,6BALd;IAMNC,cAAc,EAAE,oCANV;IAONN,OAAO,EAAE,wDAPH;IAQNO,OAAO,EAAE,+BARH;IASNC,KAAK,EAAE,6BATD;IAUNC,KAAK,EAAE,qCAVD;IAWNV,OAAO,EAAE,oBAXH;IAYNV,WAAW,EAAE,8DAZP;IAaNC,SAAS,EAAE,kDAbL;IAcNC,SAAS,EAAE;EAdL,CA9BK;EA8CbmB,MAAM,EAAE;IACNtB,IAAI,EAAE;EADA;AA9CK,CAAf"},"metadata":{},"sourceType":"module"}