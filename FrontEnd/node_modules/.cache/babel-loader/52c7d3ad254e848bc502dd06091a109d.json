{"ast":null,"code":"var baseIteratee = require('./_baseIteratee'),\n    basePullAt = require('./_basePullAt');\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\n\n\nfunction remove(array, predicate) {\n  var result = [];\n\n  if (!(array && array.length)) {\n    return result;\n  }\n\n  var index = -1,\n      indexes = [],\n      length = array.length;\n  predicate = baseIteratee(predicate, 3);\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n\n  basePullAt(array, indexes);\n  return result;\n}\n\nmodule.exports = remove;","map":{"version":3,"names":["baseIteratee","require","basePullAt","remove","array","predicate","result","length","index","indexes","value","push","module","exports"],"sources":["/home/brisa/Documentos/api_desafio_BrisaNet/FrontEnd/node_modules/lodash/remove.js"],"sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    basePullAt = require('./_basePullAt');\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseIteratee(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nmodule.exports = remove;\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;AAAA,IACIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CADxB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC;EAChC,IAAIC,MAAM,GAAG,EAAb;;EACA,IAAI,EAAEF,KAAK,IAAIA,KAAK,CAACG,MAAjB,CAAJ,EAA8B;IAC5B,OAAOD,MAAP;EACD;;EACD,IAAIE,KAAK,GAAG,CAAC,CAAb;EAAA,IACIC,OAAO,GAAG,EADd;EAAA,IAEIF,MAAM,GAAGH,KAAK,CAACG,MAFnB;EAIAF,SAAS,GAAGL,YAAY,CAACK,SAAD,EAAY,CAAZ,CAAxB;;EACA,OAAO,EAAEG,KAAF,GAAUD,MAAjB,EAAyB;IACvB,IAAIG,KAAK,GAAGN,KAAK,CAACI,KAAD,CAAjB;;IACA,IAAIH,SAAS,CAACK,KAAD,EAAQF,KAAR,EAAeJ,KAAf,CAAb,EAAoC;MAClCE,MAAM,CAACK,IAAP,CAAYD,KAAZ;MACAD,OAAO,CAACE,IAAR,CAAaH,KAAb;IACD;EACF;;EACDN,UAAU,CAACE,KAAD,EAAQK,OAAR,CAAV;EACA,OAAOH,MAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBV,MAAjB"},"metadata":{},"sourceType":"script"}