{"ast":null,"code":"export var Schema = /*#__PURE__*/function () {\n  function Schema(schema) {\n    this.spec = void 0;\n    this.data = void 0;\n    this.spec = schema;\n  }\n\n  var _proto = Schema.prototype;\n\n  _proto.getFieldType = function getFieldType(fieldName) {\n    var _this$spec;\n\n    return (_this$spec = this.spec) === null || _this$spec === void 0 ? void 0 : _this$spec[fieldName];\n  };\n\n  _proto.getKeys = function getKeys() {\n    return Object.keys(this.spec);\n  };\n\n  _proto.setSchemaOptionsForAllType = function setSchemaOptionsForAllType(data) {\n    var _this = this;\n\n    if (data === this.data) {\n      return;\n    }\n\n    Object.entries(this.spec).forEach(function (_ref) {\n      var key = _ref[0],\n          type = _ref[1];\n      type.setSchemaOptions(_this.spec, data === null || data === void 0 ? void 0 : data[key]);\n    });\n    this.data = data;\n  };\n\n  _proto.checkForField = function checkForField(fieldName, data) {\n    this.setSchemaOptionsForAllType(data);\n    var fieldChecker = this.spec[fieldName];\n\n    if (!fieldChecker) {\n      // fieldValue can be anything if no schema defined\n      return {\n        hasError: false\n      };\n    }\n\n    return fieldChecker.check(data[fieldName], data, fieldName);\n  };\n\n  _proto.checkForFieldAsync = function checkForFieldAsync(fieldName, data) {\n    this.setSchemaOptionsForAllType(data);\n    var fieldChecker = this.spec[fieldName];\n\n    if (!fieldChecker) {\n      // fieldValue can be anything if no schema defined\n      return Promise.resolve({\n        hasError: false\n      });\n    }\n\n    return fieldChecker.checkAsync(data[fieldName], data, fieldName);\n  };\n\n  _proto.check = function check(data) {\n    var _this2 = this;\n\n    var checkResult = {};\n    Object.keys(this.spec).forEach(function (key) {\n      if (typeof data === 'object') {\n        checkResult[key] = _this2.checkForField(key, data);\n      }\n    });\n    return checkResult;\n  };\n\n  _proto.checkAsync = function checkAsync(data) {\n    var _this3 = this;\n\n    var checkResult = {};\n    var promises = [];\n    var keys = [];\n    Object.keys(this.spec).forEach(function (key) {\n      keys.push(key);\n      promises.push(_this3.checkForFieldAsync(key, data));\n    });\n    return Promise.all(promises).then(function (values) {\n      for (var i = 0; i < values.length; i += 1) {\n        checkResult[keys[i]] = values[i];\n      }\n\n      return checkResult;\n    });\n  };\n\n  return Schema;\n}();\nexport function SchemaModel(o) {\n  return new Schema(o);\n}\n\nSchemaModel.combine = function combine() {\n  for (var _len = arguments.length, specs = new Array(_len), _key = 0; _key < _len; _key++) {\n    specs[_key] = arguments[_key];\n  }\n\n  return new Schema(specs.map(function (model) {\n    return model.spec;\n  }).reduce(function (accumulator, currentValue) {\n    return Object.assign(accumulator, currentValue);\n  }, {}));\n};","map":{"version":3,"names":["Schema","schema","spec","data","_proto","prototype","getFieldType","fieldName","_this$spec","getKeys","Object","keys","setSchemaOptionsForAllType","_this","entries","forEach","_ref","key","type","setSchemaOptions","checkForField","fieldChecker","hasError","check","checkForFieldAsync","Promise","resolve","checkAsync","_this2","checkResult","_this3","promises","push","all","then","values","i","length","SchemaModel","o","combine","_len","arguments","specs","Array","_key","map","model","reduce","accumulator","currentValue","assign"],"sources":["/home/brisa/Documentos/api_desafio_BrisaNet/FrontEnd/node_modules/schema-typed/es/Schema.js"],"sourcesContent":["export var Schema = /*#__PURE__*/function () {\n  function Schema(schema) {\n    this.spec = void 0;\n    this.data = void 0;\n    this.spec = schema;\n  }\n\n  var _proto = Schema.prototype;\n\n  _proto.getFieldType = function getFieldType(fieldName) {\n    var _this$spec;\n\n    return (_this$spec = this.spec) === null || _this$spec === void 0 ? void 0 : _this$spec[fieldName];\n  };\n\n  _proto.getKeys = function getKeys() {\n    return Object.keys(this.spec);\n  };\n\n  _proto.setSchemaOptionsForAllType = function setSchemaOptionsForAllType(data) {\n    var _this = this;\n\n    if (data === this.data) {\n      return;\n    }\n\n    Object.entries(this.spec).forEach(function (_ref) {\n      var key = _ref[0],\n          type = _ref[1];\n      type.setSchemaOptions(_this.spec, data === null || data === void 0 ? void 0 : data[key]);\n    });\n    this.data = data;\n  };\n\n  _proto.checkForField = function checkForField(fieldName, data) {\n    this.setSchemaOptionsForAllType(data);\n    var fieldChecker = this.spec[fieldName];\n\n    if (!fieldChecker) {\n      // fieldValue can be anything if no schema defined\n      return {\n        hasError: false\n      };\n    }\n\n    return fieldChecker.check(data[fieldName], data, fieldName);\n  };\n\n  _proto.checkForFieldAsync = function checkForFieldAsync(fieldName, data) {\n    this.setSchemaOptionsForAllType(data);\n    var fieldChecker = this.spec[fieldName];\n\n    if (!fieldChecker) {\n      // fieldValue can be anything if no schema defined\n      return Promise.resolve({\n        hasError: false\n      });\n    }\n\n    return fieldChecker.checkAsync(data[fieldName], data, fieldName);\n  };\n\n  _proto.check = function check(data) {\n    var _this2 = this;\n\n    var checkResult = {};\n    Object.keys(this.spec).forEach(function (key) {\n      if (typeof data === 'object') {\n        checkResult[key] = _this2.checkForField(key, data);\n      }\n    });\n    return checkResult;\n  };\n\n  _proto.checkAsync = function checkAsync(data) {\n    var _this3 = this;\n\n    var checkResult = {};\n    var promises = [];\n    var keys = [];\n    Object.keys(this.spec).forEach(function (key) {\n      keys.push(key);\n      promises.push(_this3.checkForFieldAsync(key, data));\n    });\n    return Promise.all(promises).then(function (values) {\n      for (var i = 0; i < values.length; i += 1) {\n        checkResult[keys[i]] = values[i];\n      }\n\n      return checkResult;\n    });\n  };\n\n  return Schema;\n}();\nexport function SchemaModel(o) {\n  return new Schema(o);\n}\n\nSchemaModel.combine = function combine() {\n  for (var _len = arguments.length, specs = new Array(_len), _key = 0; _key < _len; _key++) {\n    specs[_key] = arguments[_key];\n  }\n\n  return new Schema(specs.map(function (model) {\n    return model.spec;\n  }).reduce(function (accumulator, currentValue) {\n    return Object.assign(accumulator, currentValue);\n  }, {}));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}