{"ast":null,"code":"import requestAnimationFramePolyfill from 'dom-lib/requestAnimationFramePolyfill';\nimport cancelAnimationFramePolyfill from 'dom-lib/cancelAnimationFramePolyfill';\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return cancelAnimationFramePolyfill(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n  var frame = {};\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call(null);\n    } else {\n      frame.id = requestAnimationFramePolyfill(timeout);\n    }\n  };\n\n  frame = {\n    id: requestAnimationFramePolyfill(timeout)\n  };\n  return frame;\n};","map":{"version":3,"names":["requestAnimationFramePolyfill","cancelAnimationFramePolyfill","cancelAnimationTimeout","frame","id","requestAnimationTimeout","callback","delay","start","Promise","resolve","then","Date","now","timeout","call"],"sources":["/home/brisa/Documentos/api_desafio_BrisaNet/FrontEnd/node_modules/rsuite-table/es/utils/requestAnimationTimeout.js"],"sourcesContent":["import requestAnimationFramePolyfill from 'dom-lib/requestAnimationFramePolyfill';\nimport cancelAnimationFramePolyfill from 'dom-lib/cancelAnimationFramePolyfill';\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return cancelAnimationFramePolyfill(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n  var frame = {};\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call(null);\n    } else {\n      frame.id = requestAnimationFramePolyfill(timeout);\n    }\n  };\n\n  frame = {\n    id: requestAnimationFramePolyfill(timeout)\n  };\n  return frame;\n};"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,uCAA1C;AACA,OAAOC,4BAAP,MAAyC,sCAAzC;AACA,OAAO,IAAIC,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,KAAhC,EAAuC;EACzE,OAAOF,4BAA4B,CAACE,KAAK,CAACC,EAAP,CAAnC;AACD,CAFM;AAGP;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,QAAjC,EAA2CC,KAA3C,EAAkD;EACrF,IAAIC,KAAJ,CADqF,CAC1E;;EAEXC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAY;IACjCH,KAAK,GAAGI,IAAI,CAACC,GAAL,EAAR;EACD,CAFD;EAGA,IAAIV,KAAK,GAAG,EAAZ;;EAEA,IAAIW,OAAO,GAAG,SAASA,OAAT,GAAmB;IAC/B,IAAIF,IAAI,CAACC,GAAL,KAAaL,KAAb,IAAsBD,KAA1B,EAAiC;MAC/BD,QAAQ,CAACS,IAAT,CAAc,IAAd;IACD,CAFD,MAEO;MACLZ,KAAK,CAACC,EAAN,GAAWJ,6BAA6B,CAACc,OAAD,CAAxC;IACD;EACF,CAND;;EAQAX,KAAK,GAAG;IACNC,EAAE,EAAEJ,6BAA6B,CAACc,OAAD;EAD3B,CAAR;EAGA,OAAOX,KAAP;AACD,CApBM"},"metadata":{},"sourceType":"module"}