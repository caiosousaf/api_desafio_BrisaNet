{"ast":null,"code":"import _get from \"lodash/get\";\nimport { flattenTree } from '../utils/treeUtils';\nvar hasSymbol = typeof Symbol === 'function';\nexport var KEY_GROUP = hasSymbol ? Symbol('_$grouped') : '_$grouped';\nexport var KEY_GROUP_TITLE = 'groupTitle';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    // this will allow getting data using dot notation\n    // i.e groupBy=\"country.name\" as country will be a nested object\n    // to the item and the name will be nested key to the country object\n    // can be used with values in arrays, i.e groupBy=\"addresses.0.country.name\"\n    var groupByValue = _get(item, key, '');\n\n    if (!tempData[groupByValue]) {\n      tempData[groupByValue] = [];\n    }\n\n    tempData[groupByValue].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var _ref2;\n\n    var groupTitle = _ref[0],\n        children = _ref[1];\n    return _ref2 = {\n      children: isSort ? children.sort(sort(false)) : children\n    }, _ref2[KEY_GROUP_TITLE] = groupTitle, _ref2[KEY_GROUP] = true, _ref2;\n  });\n\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n\n  return flattenTree(nextData);\n}","map":{"version":3,"names":["_get","flattenTree","hasSymbol","Symbol","KEY_GROUP","KEY_GROUP_TITLE","getDataGroupBy","data","key","sort","tempData","isSort","forEach","item","groupByValue","push","nextData","Object","entries","map","_ref","_ref2","groupTitle","children"],"sources":["/home/brisa/Documentos/api_desafio_BrisaNet/FrontEnd/node_modules/rsuite/esm/utils/getDataGroupBy.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport { flattenTree } from '../utils/treeUtils';\nvar hasSymbol = typeof Symbol === 'function';\nexport var KEY_GROUP = hasSymbol ? Symbol('_$grouped') : '_$grouped';\nexport var KEY_GROUP_TITLE = 'groupTitle';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    // this will allow getting data using dot notation\n    // i.e groupBy=\"country.name\" as country will be a nested object\n    // to the item and the name will be nested key to the country object\n    // can be used with values in arrays, i.e groupBy=\"addresses.0.country.name\"\n    var groupByValue = _get(item, key, '');\n\n    if (!tempData[groupByValue]) {\n      tempData[groupByValue] = [];\n    }\n\n    tempData[groupByValue].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var _ref2;\n\n    var groupTitle = _ref[0],\n        children = _ref[1];\n    return _ref2 = {\n      children: isSort ? children.sort(sort(false)) : children\n    }, _ref2[KEY_GROUP_TITLE] = groupTitle, _ref2[KEY_GROUP] = true, _ref2;\n  });\n\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n\n  return flattenTree(nextData);\n}"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,IAAIC,SAAS,GAAG,OAAOC,MAAP,KAAkB,UAAlC;AACA,OAAO,IAAIC,SAAS,GAAGF,SAAS,GAAGC,MAAM,CAAC,WAAD,CAAT,GAAyB,WAAlD;AACP,OAAO,IAAIE,eAAe,GAAG,YAAtB;AACP,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;EACtD,IAAIF,IAAI,KAAK,KAAK,CAAlB,EAAqB;IACnBA,IAAI,GAAG,EAAP;EACD;;EAED,IAAIG,QAAQ,GAAG,EAAf;EACA,IAAIC,MAAM,GAAG,OAAOF,IAAP,KAAgB,UAA7B;EACAF,IAAI,CAACK,OAAL,CAAa,UAAUC,IAAV,EAAgB;IAC3B;IACA;IACA;IACA;IACA,IAAIC,YAAY,GAAGd,IAAI,CAACa,IAAD,EAAOL,GAAP,EAAY,EAAZ,CAAvB;;IAEA,IAAI,CAACE,QAAQ,CAACI,YAAD,CAAb,EAA6B;MAC3BJ,QAAQ,CAACI,YAAD,CAAR,GAAyB,EAAzB;IACD;;IAEDJ,QAAQ,CAACI,YAAD,CAAR,CAAuBC,IAAvB,CAA4BF,IAA5B;EACD,CAZD;EAaA,IAAIG,QAAQ,GAAGC,MAAM,CAACC,OAAP,CAAeR,QAAf,EAAyBS,GAAzB,CAA6B,UAAUC,IAAV,EAAgB;IAC1D,IAAIC,KAAJ;;IAEA,IAAIC,UAAU,GAAGF,IAAI,CAAC,CAAD,CAArB;IAAA,IACIG,QAAQ,GAAGH,IAAI,CAAC,CAAD,CADnB;IAEA,OAAOC,KAAK,GAAG;MACbE,QAAQ,EAAEZ,MAAM,GAAGY,QAAQ,CAACd,IAAT,CAAcA,IAAI,CAAC,KAAD,CAAlB,CAAH,GAAgCc;IADnC,CAAR,EAEJF,KAAK,CAAChB,eAAD,CAAL,GAAyBiB,UAFrB,EAEiCD,KAAK,CAACjB,SAAD,CAAL,GAAmB,IAFpD,EAE0DiB,KAFjE;EAGD,CARc,CAAf;;EAUA,IAAIV,MAAJ,EAAY;IACVK,QAAQ,GAAGA,QAAQ,CAACP,IAAT,CAAcA,IAAI,CAAC,IAAD,CAAlB,CAAX;EACD;;EAED,OAAOR,WAAW,CAACe,QAAD,CAAlB;AACD"},"metadata":{},"sourceType":"module"}