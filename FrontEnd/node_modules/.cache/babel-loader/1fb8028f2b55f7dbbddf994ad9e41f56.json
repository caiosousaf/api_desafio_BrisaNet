{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useState, useCallback, useRef } from 'react';\nimport addStyle from 'dom-lib/addStyle';\nimport addClass from 'dom-lib/addClass';\nimport removeClass from 'dom-lib/removeClass';\nimport omit from 'lodash/omit';\nimport merge from 'lodash/merge';\nimport { SCROLLBAR_WIDTH, SORT_TYPE } from '../constants';\nimport useControlled from './useControlled';\nimport getTableColumns from './getTableColumns';\nimport getTotalByColumns from './getTotalByColumns';\nimport useUpdateEffect from './useUpdateEffect';\n/**\n * Attach rendering-related attributes to all cells of the form and cache them.\n * @param props\n * @returns\n */\n\nvar useCellDescriptor = function useCellDescriptor(props) {\n  var children = props.children,\n      rtl = props.rtl,\n      mouseAreaRef = props.mouseAreaRef,\n      tableRef = props.tableRef,\n      minScrollX = props.minScrollX,\n      scrollX = props.scrollX,\n      tableWidth = props.tableWidth,\n      headerHeight = props.headerHeight,\n      showHeader = props.showHeader,\n      sortTypeProp = props.sortType,\n      defaultSortType = props.defaultSortType,\n      sortColumn = props.sortColumn,\n      rowHeight = props.rowHeight,\n      onSortColumn = props.onSortColumn,\n      onHeaderCellResize = props.onHeaderCellResize,\n      prefix = props.prefix;\n\n  var _useControlled = useControlled(sortTypeProp, defaultSortType),\n      sortType = _useControlled[0],\n      setSortType = _useControlled[1];\n\n  var _useState = useState(),\n      cacheData = _useState[0],\n      setCacheData = _useState[1];\n\n  var clearCache = useCallback(function () {\n    setCacheData(null);\n  }, []);\n  var setColumnResizing = useCallback(function (resizing) {\n    if (!tableRef.current) {\n      return;\n    }\n\n    if (resizing) {\n      addClass(tableRef.current, prefix('column-resizing'));\n    } else {\n      removeClass(tableRef.current, prefix('column-resizing'));\n    }\n  }, [prefix, tableRef]);\n  var columnWidths = useRef({});\n  useUpdateEffect(function () {\n    clearCache();\n  }, [children, sortColumn, sortType, tableWidth.current, scrollX.current, minScrollX.current]);\n  var handleColumnResizeEnd = useCallback(function (columnWidth, _cursorDelta, dataKey, index) {\n    columnWidths.current[dataKey + \"_\" + index + \"_width\"] = columnWidth;\n    setColumnResizing(false);\n\n    if (mouseAreaRef.current) {\n      addStyle(mouseAreaRef.current, {\n        display: 'none'\n      });\n    }\n\n    clearCache();\n    onHeaderCellResize === null || onHeaderCellResize === void 0 ? void 0 : onHeaderCellResize(columnWidth, dataKey);\n  }, [clearCache, mouseAreaRef, onHeaderCellResize, setColumnResizing]);\n  var handleColumnResizeMove = useCallback(function (width, left, fixed) {\n    var mouseAreaLeft = width + left;\n    var x = mouseAreaLeft;\n    var dir = 'left';\n\n    if (rtl) {\n      mouseAreaLeft += minScrollX.current + SCROLLBAR_WIDTH;\n      dir = 'right';\n    }\n\n    if (!fixed) {\n      x = mouseAreaLeft + (rtl ? -scrollX.current : scrollX.current);\n    }\n\n    if (mouseAreaRef.current) {\n      var _addStyle;\n\n      addStyle(mouseAreaRef.current, (_addStyle = {\n        display: 'block'\n      }, _addStyle[dir] = x + \"px\", _addStyle));\n    }\n  }, [minScrollX, mouseAreaRef, rtl, scrollX]);\n  var handleColumnResizeStart = useCallback(function (width, left, fixed) {\n    setColumnResizing(true);\n    handleColumnResizeMove(width, left, fixed);\n  }, [handleColumnResizeMove, setColumnResizing]);\n  var handleSortColumn = useCallback(function (dataKey) {\n    var nextSortType = sortType;\n\n    if (sortColumn === dataKey) {\n      nextSortType = sortType === SORT_TYPE.ASC ? SORT_TYPE.DESC : SORT_TYPE.ASC;\n      setSortType(nextSortType);\n    }\n\n    onSortColumn === null || onSortColumn === void 0 ? void 0 : onSortColumn(dataKey, nextSortType);\n  }, [onSortColumn, setSortType, sortColumn, sortType]);\n\n  if (cacheData) {\n    return cacheData;\n  }\n\n  var hasCustomTreeCol = false;\n  var left = 0; // Cell left margin\n\n  var headerCells = []; // Table header cell\n\n  var bodyCells = []; // Table body cell\n\n  if (!children) {\n    var _cacheCell = {\n      columns: [],\n      headerCells: headerCells,\n      bodyCells: bodyCells,\n      hasCustomTreeCol: hasCustomTreeCol,\n      allColumnsWidth: left\n    };\n    setCacheData(_cacheCell);\n    return _cacheCell;\n  }\n\n  var columns = getTableColumns(children);\n  var count = columns.length;\n\n  var _getTotalByColumns = getTotalByColumns(columns),\n      totalFlexGrow = _getTotalByColumns.totalFlexGrow,\n      totalWidth = _getTotalByColumns.totalWidth;\n\n  React.Children.forEach(columns, function (column, index) {\n    if ( /*#__PURE__*/React.isValidElement(column)) {\n      var _columnWidths$current;\n\n      var columnChildren = column.props.children;\n      var _column$props = column.props,\n          _width = _column$props.width,\n          resizable = _column$props.resizable,\n          flexGrow = _column$props.flexGrow,\n          minWidth = _column$props.minWidth,\n          onResize = _column$props.onResize,\n          treeCol = _column$props.treeCol;\n\n      if (treeCol) {\n        hasCustomTreeCol = true;\n      }\n\n      if (resizable && flexGrow) {\n        console.warn(\"Cannot set 'resizable' and 'flexGrow' together in <Column>, column index: \" + index);\n      }\n\n      if (columnChildren.length !== 2) {\n        throw new Error(\"Component <HeaderCell> and <Cell> is required, column index: \" + index + \" \");\n      }\n\n      var headerCell = columnChildren[0];\n      var cell = columnChildren[1];\n      var cellWidth = ((_columnWidths$current = columnWidths.current) === null || _columnWidths$current === void 0 ? void 0 : _columnWidths$current[cell.props.dataKey + \"_\" + index + \"_width\"]) || _width || 0;\n\n      if (tableWidth.current && flexGrow && totalFlexGrow) {\n        cellWidth = Math.max((tableWidth.current - totalWidth) / totalFlexGrow * flexGrow, minWidth || 60);\n      }\n\n      var cellProps = _extends({}, omit(column.props, ['children']), {\n        'aria-colindex': index + 1,\n        left: left,\n        headerHeight: headerHeight,\n        key: index,\n        width: cellWidth,\n        height: typeof rowHeight === 'function' ? rowHeight() : rowHeight,\n        firstColumn: index === 0,\n        lastColumn: index === count - 1\n      });\n\n      if (showHeader && headerHeight) {\n        var headerCellProps = {\n          // Resizable column\n          // `index` is used to define the serial number when dragging the column width\n          index: index,\n          dataKey: cell.props.dataKey,\n          isHeaderCell: true,\n          minWidth: column.props.minWidth,\n          sortable: column.props.sortable,\n          onSortColumn: handleSortColumn,\n          sortType: sortType,\n          sortColumn: sortColumn,\n          flexGrow: flexGrow\n        };\n\n        if (resizable) {\n          merge(headerCellProps, {\n            onResize: onResize,\n            onColumnResizeEnd: handleColumnResizeEnd,\n            onColumnResizeStart: handleColumnResizeStart,\n            onColumnResizeMove: handleColumnResizeMove\n          });\n        }\n\n        headerCells.push( /*#__PURE__*/React.cloneElement(headerCell, _extends({}, cellProps, headerCellProps)));\n      }\n\n      bodyCells.push( /*#__PURE__*/React.cloneElement(cell, cellProps));\n      left += cellWidth;\n    }\n  });\n  var cacheCell = {\n    columns: columns,\n    headerCells: headerCells,\n    bodyCells: bodyCells,\n    allColumnsWidth: left,\n    hasCustomTreeCol: hasCustomTreeCol\n  };\n  setCacheData(cacheCell);\n  return cacheCell;\n};\n\nexport default useCellDescriptor;","map":{"version":3,"names":["_extends","React","useState","useCallback","useRef","addStyle","addClass","removeClass","omit","merge","SCROLLBAR_WIDTH","SORT_TYPE","useControlled","getTableColumns","getTotalByColumns","useUpdateEffect","useCellDescriptor","props","children","rtl","mouseAreaRef","tableRef","minScrollX","scrollX","tableWidth","headerHeight","showHeader","sortTypeProp","sortType","defaultSortType","sortColumn","rowHeight","onSortColumn","onHeaderCellResize","prefix","_useControlled","setSortType","_useState","cacheData","setCacheData","clearCache","setColumnResizing","resizing","current","columnWidths","handleColumnResizeEnd","columnWidth","_cursorDelta","dataKey","index","display","handleColumnResizeMove","width","left","fixed","mouseAreaLeft","x","dir","_addStyle","handleColumnResizeStart","handleSortColumn","nextSortType","ASC","DESC","hasCustomTreeCol","headerCells","bodyCells","_cacheCell","columns","allColumnsWidth","count","length","_getTotalByColumns","totalFlexGrow","totalWidth","Children","forEach","column","isValidElement","_columnWidths$current","columnChildren","_column$props","_width","resizable","flexGrow","minWidth","onResize","treeCol","console","warn","Error","headerCell","cell","cellWidth","Math","max","cellProps","key","height","firstColumn","lastColumn","headerCellProps","isHeaderCell","sortable","onColumnResizeEnd","onColumnResizeStart","onColumnResizeMove","push","cloneElement","cacheCell"],"sources":["/home/brisa/Documentos/api_desafio_BrisaNet/FrontEnd/node_modules/rsuite-table/es/utils/useCellDescriptor.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useState, useCallback, useRef } from 'react';\nimport addStyle from 'dom-lib/addStyle';\nimport addClass from 'dom-lib/addClass';\nimport removeClass from 'dom-lib/removeClass';\nimport omit from 'lodash/omit';\nimport merge from 'lodash/merge';\nimport { SCROLLBAR_WIDTH, SORT_TYPE } from '../constants';\nimport useControlled from './useControlled';\nimport getTableColumns from './getTableColumns';\nimport getTotalByColumns from './getTotalByColumns';\nimport useUpdateEffect from './useUpdateEffect';\n\n/**\n * Attach rendering-related attributes to all cells of the form and cache them.\n * @param props\n * @returns\n */\nvar useCellDescriptor = function useCellDescriptor(props) {\n  var children = props.children,\n      rtl = props.rtl,\n      mouseAreaRef = props.mouseAreaRef,\n      tableRef = props.tableRef,\n      minScrollX = props.minScrollX,\n      scrollX = props.scrollX,\n      tableWidth = props.tableWidth,\n      headerHeight = props.headerHeight,\n      showHeader = props.showHeader,\n      sortTypeProp = props.sortType,\n      defaultSortType = props.defaultSortType,\n      sortColumn = props.sortColumn,\n      rowHeight = props.rowHeight,\n      onSortColumn = props.onSortColumn,\n      onHeaderCellResize = props.onHeaderCellResize,\n      prefix = props.prefix;\n\n  var _useControlled = useControlled(sortTypeProp, defaultSortType),\n      sortType = _useControlled[0],\n      setSortType = _useControlled[1];\n\n  var _useState = useState(),\n      cacheData = _useState[0],\n      setCacheData = _useState[1];\n\n  var clearCache = useCallback(function () {\n    setCacheData(null);\n  }, []);\n  var setColumnResizing = useCallback(function (resizing) {\n    if (!tableRef.current) {\n      return;\n    }\n\n    if (resizing) {\n      addClass(tableRef.current, prefix('column-resizing'));\n    } else {\n      removeClass(tableRef.current, prefix('column-resizing'));\n    }\n  }, [prefix, tableRef]);\n  var columnWidths = useRef({});\n  useUpdateEffect(function () {\n    clearCache();\n  }, [children, sortColumn, sortType, tableWidth.current, scrollX.current, minScrollX.current]);\n  var handleColumnResizeEnd = useCallback(function (columnWidth, _cursorDelta, dataKey, index) {\n    columnWidths.current[dataKey + \"_\" + index + \"_width\"] = columnWidth;\n    setColumnResizing(false);\n\n    if (mouseAreaRef.current) {\n      addStyle(mouseAreaRef.current, {\n        display: 'none'\n      });\n    }\n\n    clearCache();\n    onHeaderCellResize === null || onHeaderCellResize === void 0 ? void 0 : onHeaderCellResize(columnWidth, dataKey);\n  }, [clearCache, mouseAreaRef, onHeaderCellResize, setColumnResizing]);\n  var handleColumnResizeMove = useCallback(function (width, left, fixed) {\n    var mouseAreaLeft = width + left;\n    var x = mouseAreaLeft;\n    var dir = 'left';\n\n    if (rtl) {\n      mouseAreaLeft += minScrollX.current + SCROLLBAR_WIDTH;\n      dir = 'right';\n    }\n\n    if (!fixed) {\n      x = mouseAreaLeft + (rtl ? -scrollX.current : scrollX.current);\n    }\n\n    if (mouseAreaRef.current) {\n      var _addStyle;\n\n      addStyle(mouseAreaRef.current, (_addStyle = {\n        display: 'block'\n      }, _addStyle[dir] = x + \"px\", _addStyle));\n    }\n  }, [minScrollX, mouseAreaRef, rtl, scrollX]);\n  var handleColumnResizeStart = useCallback(function (width, left, fixed) {\n    setColumnResizing(true);\n    handleColumnResizeMove(width, left, fixed);\n  }, [handleColumnResizeMove, setColumnResizing]);\n  var handleSortColumn = useCallback(function (dataKey) {\n    var nextSortType = sortType;\n\n    if (sortColumn === dataKey) {\n      nextSortType = sortType === SORT_TYPE.ASC ? SORT_TYPE.DESC : SORT_TYPE.ASC;\n      setSortType(nextSortType);\n    }\n\n    onSortColumn === null || onSortColumn === void 0 ? void 0 : onSortColumn(dataKey, nextSortType);\n  }, [onSortColumn, setSortType, sortColumn, sortType]);\n\n  if (cacheData) {\n    return cacheData;\n  }\n\n  var hasCustomTreeCol = false;\n  var left = 0; // Cell left margin\n\n  var headerCells = []; // Table header cell\n\n  var bodyCells = []; // Table body cell\n\n  if (!children) {\n    var _cacheCell = {\n      columns: [],\n      headerCells: headerCells,\n      bodyCells: bodyCells,\n      hasCustomTreeCol: hasCustomTreeCol,\n      allColumnsWidth: left\n    };\n    setCacheData(_cacheCell);\n    return _cacheCell;\n  }\n\n  var columns = getTableColumns(children);\n  var count = columns.length;\n\n  var _getTotalByColumns = getTotalByColumns(columns),\n      totalFlexGrow = _getTotalByColumns.totalFlexGrow,\n      totalWidth = _getTotalByColumns.totalWidth;\n\n  React.Children.forEach(columns, function (column, index) {\n    if ( /*#__PURE__*/React.isValidElement(column)) {\n      var _columnWidths$current;\n\n      var columnChildren = column.props.children;\n      var _column$props = column.props,\n          _width = _column$props.width,\n          resizable = _column$props.resizable,\n          flexGrow = _column$props.flexGrow,\n          minWidth = _column$props.minWidth,\n          onResize = _column$props.onResize,\n          treeCol = _column$props.treeCol;\n\n      if (treeCol) {\n        hasCustomTreeCol = true;\n      }\n\n      if (resizable && flexGrow) {\n        console.warn(\"Cannot set 'resizable' and 'flexGrow' together in <Column>, column index: \" + index);\n      }\n\n      if (columnChildren.length !== 2) {\n        throw new Error(\"Component <HeaderCell> and <Cell> is required, column index: \" + index + \" \");\n      }\n\n      var headerCell = columnChildren[0];\n      var cell = columnChildren[1];\n      var cellWidth = ((_columnWidths$current = columnWidths.current) === null || _columnWidths$current === void 0 ? void 0 : _columnWidths$current[cell.props.dataKey + \"_\" + index + \"_width\"]) || _width || 0;\n\n      if (tableWidth.current && flexGrow && totalFlexGrow) {\n        cellWidth = Math.max((tableWidth.current - totalWidth) / totalFlexGrow * flexGrow, minWidth || 60);\n      }\n\n      var cellProps = _extends({}, omit(column.props, ['children']), {\n        'aria-colindex': index + 1,\n        left: left,\n        headerHeight: headerHeight,\n        key: index,\n        width: cellWidth,\n        height: typeof rowHeight === 'function' ? rowHeight() : rowHeight,\n        firstColumn: index === 0,\n        lastColumn: index === count - 1\n      });\n\n      if (showHeader && headerHeight) {\n        var headerCellProps = {\n          // Resizable column\n          // `index` is used to define the serial number when dragging the column width\n          index: index,\n          dataKey: cell.props.dataKey,\n          isHeaderCell: true,\n          minWidth: column.props.minWidth,\n          sortable: column.props.sortable,\n          onSortColumn: handleSortColumn,\n          sortType: sortType,\n          sortColumn: sortColumn,\n          flexGrow: flexGrow\n        };\n\n        if (resizable) {\n          merge(headerCellProps, {\n            onResize: onResize,\n            onColumnResizeEnd: handleColumnResizeEnd,\n            onColumnResizeStart: handleColumnResizeStart,\n            onColumnResizeMove: handleColumnResizeMove\n          });\n        }\n\n        headerCells.push( /*#__PURE__*/React.cloneElement(headerCell, _extends({}, cellProps, headerCellProps)));\n      }\n\n      bodyCells.push( /*#__PURE__*/React.cloneElement(cell, cellProps));\n      left += cellWidth;\n    }\n  });\n  var cacheCell = {\n    columns: columns,\n    headerCells: headerCells,\n    bodyCells: bodyCells,\n    allColumnsWidth: left,\n    hasCustomTreeCol: hasCustomTreeCol\n  };\n  setCacheData(cacheCell);\n  return cacheCell;\n};\n\nexport default useCellDescriptor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}